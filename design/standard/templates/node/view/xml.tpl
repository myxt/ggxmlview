{*
 * @version $Id$
 * @author Gaetano Giunta
 * @copyright (c) 2008-2010 G. Giunta
 * @license code licensed under the GPL License: see README
 *
 * DO NOT EDIT THIS FILE! Use an override template instead.
 *}
<node{if not(is_set($nonamespace))}

  xmlns="{'/xml'|ezurl('no', 'full')}"
  xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
  xsi:schemaLocation="{'/xml/xsd'|ezurl('no', 'full')}"{/if}
  node_id="{$node.node_id}"
  parent_node_id="{$node.parent_node_id}"
  main_node_id="{$node.main_node_id}"
  depth="{$node.depth}"
  sort_field="{$node.sort_field|washxml}"
  sort_order="{$node.sort_order|washxml}"
  priority="{$node.priority}"
  modified_subnode="{$node.modified_subnode}"
  path_string="{$node.path_string}"
  path_identification_string="{$node.path_identification_string|washxml}"
  remote_id="{$node.remote_id|washxml}" >
{content_view_gui view = xml content_object = $node.object}
  <children_list>
{* @todo verify if using $node.children has same sort order, creates same compiled code *}
{let children = fetch( 'content', 'list', hash( parent_node_id, $node.node_id, sort_by, $node.sort_array ) )}
{foreach $children as $item}
{node_view_gui view = 'xmlline' content_node = $item nonamespace = true}
{/foreach}
  </children_list>
</node>
